<?php
/**
 * @file
 * Install, uninstall and enable functions for the Term Disable Listing module.
 */

/**
 * Implements hook_enable().
 */
function disable_term_node_listings_enable() {
  backdrop_set_message(st('To disable a node listings for terms in a selected vocabulary, edit a vocabulary from the !url.', array('!url' => l(st('taxonomy page'), 'admin/structure/taxonomy'))));
}

/**
 * Implements hook_requirements().
 */
function disable_term_node_listings_requirements($phase) {
  $requirements = array();
  // Ensure translations don't break during installation.
  $t = get_t();

  if ($phase == 'runtime') {
    $requirements['disable_term_node_listings_page_control'] = array(
      'title' => $t('Disable Term Node Listings'),
      'severity' => REQUIREMENT_OK,
      'value' => $t('Working'),
      'description' => $t('Other modules that control term pages can block this module from working'),
    );

    $result = db_query("SELECT * from {menu_router} where path = :path", array(':path' => 'taxonomy/term/%'));
    foreach ($result as $record) {
      if ($record->page_callback != 'disable_term_node_listings_term_page') {
        $requirements['disable_term_node_listings_page_control']['value'] = $t('Blocked by') . ': ' . $record->page_callback;
        $requirements['disable_term_node_listings_page_control']['severity'] = REQUIREMENT_ERROR;
      }
    }
  }
  return $requirements;
}

/**
 * Implements hook_install().
 *
 */
function disable_term_node_listings_install() {
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    config_set('taxonomy.vocabulary.' . $vocabulary->machine_name, 'settings.disable_node_listings', 0);
  }
}

/**
 * Implements hook_uninstall().
 */
function disable_term_node_listings_uninstall() {
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    $config = config('taxonomy.vocabulary.' . $vocabulary->machine_name);
    $config->clear('settings.disable_node_listings');
    $config->save();
  }
}

/**
 * Update variables to config and remove them.
 */
function disable_term_node_listings_update_1000() {
  foreach (taxonomy_get_vocabularies() as $vocabulary) {
    config_set('taxonomy.vocabulary.' . $vocabulary->machine_name, 'settings.disable_node_listings', update_variable_get('disable_term_node_listings_' . $vocabulary->machine_name, 0));
    update_variable_del('disable_term_node_listings_' . $vocabulary->machine_name);
  }
}

/**
 * Implements hook_update_last_removed().
 */
function disable_term_node_listings_update_last_removed() {
  return 7100;
}